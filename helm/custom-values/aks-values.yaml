# Default values for boldreports.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: bold-services
appBaseUrl: ''
optionalLibs: 'mysql,oracle,npgsql'
clusterProvider: 'aks'

persistentVolume:
  # persistent volumes were global resources. 
  # so if you already have Bold Reports installed in your cluster, then the previous persistent volume name will conflict with current installation.
  # Change this name to avoid conflicts with previous Bold Reports persistent volumes.
  name: bold-fileserver
  capacity: 3Gi
  aks:
    fileShareName: ''
    # base64 string
    azureStorageAccountName: ''
    # base64 string
    azureStorageAccountKey: ''

    # To configure persistent volume using NFS fileshare, provide the following values:
    # Note: The premium storage account of the NFS fileshare must be within the same subscription as the AKS cluster.
    nfs:
      # fileshare name as 'storageaccountname/filesharename' Ex:premiumstorage1234/boldbi.
      fileShareName: ''

      # hostname of the fileshare Ex:premiumstorage1234.file.core.windows.net.
      hostName: ''

# image:
#   repo: gcr.io/boldbi-294612
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: 4.2.68
#   pullPolicy: IfNotPresent
# imagePullSecrets: []

loadBalancer:
  type: nginx
  affinityCookie:
    enable: true
    affinityCookieExpiration: 600
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  singleHost: 
    secretName: bold-tls
  # multipleHost:
    # hostArray:
      # - hosts: 
          # - kubernetes.docker.internal
          # - example.com
        # secretName: bold-tls

instanceConfig:
  - app: id-web
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi
  - app: id-api
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi
  - app: id-ums
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi
  - app: reports-web
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi
  - app: reports-api
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi
  - app: reports-jobs
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi
  - app: reports-reportservice
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi
  - app: reports-viewer
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 20
    cpuResourceRequests: 250m
    memoryResourceRequests: 750Mi

autoscaling:
  enabled: true
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  behavior:
    stabilizationWindowSeconds: 60
    podsValue: 1
    podsPeriodSeconds: 60
    percentValue: 10
    percentPeriodSeconds: 60
  